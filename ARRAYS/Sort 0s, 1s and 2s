Method 1 :

Just traverse the whole array and keep the count of 1s and 0s.
Print the array accordingly. 

Method 2 : ( Efficient)

Take 3 elements low, mid, high.

www.youtube.com/watch?v=sEQk8xgjx64

#include <iostream>
using namespace std;

int sort(int arr[],int n){
	int l,m,h;
	l=m=0;
	h=(n-1);
	while(m<=h){
		switch(arr[m]){
		case 0:
			swap(arr[l],arr[m]);
			l++;
			m++;
			break;
		case 1:
			m++;
			break;
		case 2:
			swap(arr[m],arr[h]);
			h--;
			break;
		}
	}
	return 0;
}

int print(int arr[],int n){
	for(int i=0;i<n;i++){
		cout<<arr[i]<<" ";
	}
}

int main() {
	int n;
	cin>>n;
	int arr[n];
	    for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	sort(arr,n);
	print(arr,n);  
	return 0;  
}

